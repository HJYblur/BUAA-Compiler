const int p = 3;
const int eri[2] = {543,564},sda[2][2] ={342,54,5,7},fg = 543;

int hhyiv = 20;
int hh[10],lalal[3][3],dsau = 10,well[3][2]={23,43,63,43,65,22};

/*
void quickSort(int arr[], int left, int right) {
    if (left >= right) {
        return;
    }
    int i = left, j = right, base, temp;
    base = arr[left];
    while (i < j) {
        while (arr[j] >= base && i < j) {
            j = j - 1;
        }
        while (arr[i] <= base && i < j) {
            i = i + 1;
        }
        if (i < j) {
            temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
        }
    }
    arr[left] = arr[i];
    arr[i] = base;
    quickSort(arr, left, i - 1);
    quickSort(arr, i + 1, right);
}*/

int main() {
    const int length = 5;
    const int array_const[5] = {1, 2, 3, 4, 5};
    int array[5] = {23,34,654,61,2};
    int a, b;
    a = getint();
    printf("input base number a:%d\n",a);
    hh[5] = getint();
    printf("input base number b:%d\n",hh[5]);
    well[2][0] = getint();
    printf("input base number c:%d\n",well[2][0]);
	printf("The element values of array are:%d,%d,%d,%d,%d;\n",array[0],array[1],array[2],array[3],array[4]);
    array[0] = a + b;
    array[1] = a - b;
    array[2] = a * b;
    array[3] = a / b;
    array[4] = a % b;
	lalal[0][1] = eri[0]*7-2%2;
	lalal[1][1] = 21/(2+1)*7/(8-3);
	lalal[2][1] = 28/4+(3+4)%2;
	hh[0] = 4*lalal[0][1]-2%2;
	int c = lalal[1][1]+sda[0][0];
	int d = hh[0]*2;
	printf("The element values of array are:%d,%d,%d,%d,%d;\n",array[0],array[1],array[2],array[3],array[4]);
    printf("The element values of lalala are:%d,%d,%d;\n",lalal[0][1],lalal[1][1],lalal[2][1]);
    printf("c is %d,d is %d\n",c,d);
    return 0;
}
